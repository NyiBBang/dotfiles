""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocp
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'vundlevim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/syntastic'
Plugin 'godlygeek/tabular'
Plugin 'vim-airline/vim-airline'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'embear/vim-localvimrc'
Plugin 'mileszs/ack.vim'
Plugin 'derekwyatt/vim-fswitch'
Plugin 'AndrewRadev/linediff.vim'
Plugin 'SirVer/ultisnips'
Plugin 'ervandew/supertab'
Plugin 'jeaye/color_coded'
Plugin 'rdnetto/YCM-Generator'
Plugin 'tomasr/molokai'
Plugin 'NigoroJr/color_coded-colorschemes'
Plugin 'rhysd/vim-clang-format'

call vundle#end()
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Options
filetype plugin indent on
syntax on
set background=dark
colorscheme molokaied " molokai for color_coded

set number
set showmatch
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set incsearch hlsearch
set nowrap
set nomagic
set completeopt=longest,menuone
set list
set listchars=trail:_,tab::.
set backspace=indent,eol,start
set ignorecase
set smartcase
set mouse=a
set nomodeline
set cursorline
set virtualedit=all
let mapleader=","

" ycm
let g:ycm_confirm_extra_conf = 0

" airline
set laststatus=2
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

" nerdtree
noremap <F5> :NERDTree<cr>

" local vimrc
let g:localvimrc_sandbox=0
let g:localvimrc_ask=0

" buffers as tabs
set hidden
nmap <leader>T :enew<cr>
nmap <leader>l :bnext<cr>
nmap <leader>h :bprevious<cr>
nmap <leader>bq :bp <BAR> bd #<cr>
nmap <leader>bl :ls<cr>

" cpp highlighting
let g:cpp_class_scope_highlight = 1
let g:cpp_experimental_template_highlight = 1

" ignore repo files
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/tags

" switch header/source
au! BufEnter *.c let b:fswitchdst = 'h' | let b:fswitchlocs = '.'
au! BufEnter *.c{pp,xx} let b:fswitchdst = 'h,hpp,hxx' | let b:fswitchlocs = '.'
au! BufEnter *.h{,pp,xx} let b:fswitchdst = 'c,cpp,cxx' | let b:fswitchlocs = '.'
nmap <silent> <F4> :FSHere<cr>

" syntastic
let g:syntastic_enable_signs = 0
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" http://stackoverflow.com/questions/14896327/ultisnips-and-youcompleteme
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
